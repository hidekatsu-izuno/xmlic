
plugins {
	id 'java-library'
	id 'maven-publish'
	id 'signing'
}

group = 'net.arnx'
archivesBaseName = 'xmlic'
version = '1.1.1'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    jcenter()
}

dependencies {
    testImplementation 'junit:junit:4.12'
}

compileJava {
	options.encoding = 'UTF-8'
	options.debug = true
}

compileTestJava {
	options.encoding = 'UTF-8'
}

javadoc {
	options {
		links(JavaVersion.current().isJava11Compatible() ? 
			'https://docs.oracle.com/en/java/javase/11/docs/api' : 
			'https://docs.oracle.com/javase/8/docs/api/')
		locale = 'en_US'
		encoding = 'UTF-8'
		docEncoding = 'UTF-8'
		charSet = 'UTF-8'
		author = true
	}
	options.addBooleanOption('html5', JavaVersion.current().isJava9Compatible())
	exclude '**/internal/**'
}

task sourcesJar(type: Jar) {
    classifier 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier 'javadoc'
    from javadoc.destinationDir
}

// gradlew publish
publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java

            artifact sourcesJar
            artifact javadocJar

            pom {
				name = 'xmlic'
				description = 'jQuery like DOM traversal and manipulation API'
				url = 'https://github.com/hidekatsu-izuno/xmlic'

				licenses {
					license {
						name = 'The Apache Software License, Version 2.0'
						url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
					}
				}
				
				developers {
					developer {
						id = 'hidekatsu.izuno'
						name = 'Hidekatsu Izuno'
						email = 'hidekatsu.izuno@gmail.com'
					}
				}

				scm {
					url = 'https://github.com/hidekatsu-izuno/xmlic'
					connection = 'scm:git:git://github.com/hidekatsu-izuno/xmlic.git'
					developerConnection = 'scm:git:ssh:git@github.com:hidekatsu-izuno/xmlic.git'
				}
			}
		}
	}
	
	repositories {
		maven {
			url = "https://oss.sonatype.org/service/local/staging/deploy/maven2"
			credentials {
				username = sonatypeUsername
				password = sonatypePassword
			}
		}
	}
}

signing {
	sign publishing.publications.mavenJava
}
